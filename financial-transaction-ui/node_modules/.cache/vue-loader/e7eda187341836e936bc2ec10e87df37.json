{"remainingRequest":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--13-0!D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\financial-transaction\\financial-transaction-ui\\src\\views\\Transactions.vue?vue&type=template&id=1ee7e1c2&scoped=true","dependencies":[{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\src\\views\\Transactions.vue","mtime":1748031280747},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\babel.config.js","mtime":1747928015601},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747927121292},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747927121292},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1747927120062},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1747927121309},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1747927101654},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747927121292},{"path":"D:\\code\\financial-transaction\\financial-transaction-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1747927101632}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}